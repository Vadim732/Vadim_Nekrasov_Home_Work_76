@model Establishment

@{
    ViewBag.Title = "Details";
}
<div class="container my-4">
    <div class="row g-4">
        <div class="col-md-6">
            <h1 class="fw-bold text-break display-5">@Model.Name</h1>
            <p class="text-muted text-break">@Model.Description</p>
            <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#reviewModal">Leave a Review</button>
        </div>
        <div class="col-md-6">
            <img src="@Model.Image" class="img-fluid rounded shadow" alt="Establishment Image" />
        </div>
    </div>
    <div class="row mt-4">
        <div class="col-12">
            <h4 class="fw-bold mb-3">Gallery</h4>
        </div>
        @if (Model.GalleryImages != null && Model.GalleryImages.Count > 0)
        {
            <div id="gallery">
                <div id="carouselExampleInterval" class="carousel slide" data-bs-ride="carousel" style="width: 450px; height: 600px;">
                    <div class="carousel-inner">
                    
                    </div>
                    <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleInterval" data-bs-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Предыдущий</span>
                    </button>
                    <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleInterval" data-bs-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Следующий</span>
                    </button>
                </div>
            </div>   
        }
    </div>
    <div class="row mt-4">
        <div class="col-12 py-3 bg-light border rounded">
            <h5 class="fw-bold">Rating</h5>
            <div class="rating pt-4 pb-4" style="width: 100%; border-top: 1px solid black; border-bottom: 1px solid black;"></div>
        </div>
    </div>
    <div class="mt-3 mb-3 bg-light p-2" style="border: 1px solid rgba(222,226,230); border-radius: 5px;">
        <form id="uploadForm" method="post" asp-action="UploadGalleryImage" enctype="multipart/form-data">
            <div class="mb-3">
                <label class="form-label">Upload Image</label>
                <input type="file" class="form-control" name="file" required/>
            </div>
            <input type="hidden" id="upload-id" name="id" value="@Model.Id"/>
            <button type="submit" id="submit-upload" class="btn btn-primary">Upload Image</button>
        </form>
    </div>
    <div class="row mt-4">
        <div class="col-12">
            @if (Model.Reviews != null && Model.Reviews.Any())
            {
                <h4 class="fw-bold">Reviews</h4>
                @foreach (var review in Model.Reviews)
                {
                    <div class="reviews">
                        <div class="card mb-3 shadow-sm">
                            <div class="card-body">
                                <h5 class="card-title fw-bold">@review.Title</h5>
                                <p class="card-text">@review.Description</p>
                                <p class="card-text text-muted">
                                    Rating:
                                    @for (int i = 1; i <= 5; i++)
                                    {
                                        if (i <= review.Stars)
                                        {
                                            <i class="fa fa-star text-black"></i>
                                        }
                                        else
                                        {
                                            <i class="fa fa-star-o text-black"></i>
                                        }
                                    }
                                    (@review.Stars)
                                </p>
                                <p class="card-text text-muted">
                                    By: @review.User?.UserName | Date: @review.CreatedAt.ToString("yyyy-MM-dd")
                                </p>
                            </div>
                        </div>
                    </div>
                } 
            }
        </div>
    </div>
</div>
<div class="modal fade" id="reviewModal" tabindex="-1" aria-labelledby="reviewModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="reviewModalLabel">Add a Review</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="reviewForm">
                    <div class="mb-3">
                        <label for="Title" class="form-label">Title</label>
                        <input type="text" class="form-control" id="Title" required />
                    </div>
                    <div class="mb-3">
                        <label for="Description" class="form-label">Comment</label>
                        <textarea class="form-control" id="Description" rows="3" required></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="Stars" class="form-label">Rating</label>
                        <div id="starRating" class="d-flex" style="gap: 5px;">
                        </div>
                        <input type="hidden" id="Stars" name="Stars" value="1" required />
                    </div>
                    <input type="hidden" id="EstablishmentId" value="@Model.Id" />
                    <button type="submit" class="btn btn-primary submit-review">Submit Review</button>
                </form>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="confirmDeleteModal" tabindex="-1" aria-labelledby="confirmDeleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmDeleteModalLabel">Replace Your Review</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>You have already submitted a review for this establishment. Would you like to delete your previous review and create a new one?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="deleteAndCreateReview">Delete and Create New</button>
            </div>
        </div>
    </div>
</div>


@if (Model.GalleryImages != null && Model.GalleryImages.Count > 0)
{
    int index = 0;
    foreach(GalleryImage image in Model.GalleryImages)
    {
        index++;
        <div class="modal fade" id="exampleModal_@index" tabindex="-1" aria-labelledby="exampleModalLabel_@index" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header" style="border-bottom: none;">
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Закрыть"></button>
                    </div>
                    <div class="modal-body">
                       <img src="@image.ImagePath" style="width: 100%; height: 100%;" alt="gallery-image"/>
                    </div>
                </div>
            </div>
        </div>

    }
}


@section Scripts
{
    <script>
        $(document).ready(function () {
            const starContainer = $('#starRating');
            const hiddenInput = $('#Stars');
            for (let i = 1; i <= 5; i++) {
                const star = $('<i>')
                    .addClass('fa fa-star-o')
                    .css({
                        fontSize: '24px',
                        cursor: 'pointer',
                        color: '#000000FF'
                    })
                    .attr('data-value', i);
                star.on('click', function () {
                    const value = $(this).attr('data-value');
                    hiddenInput.val(value);
                    updateStars(value);
                });
                starContainer.append(star);
            }
            function updateStars(value) {
                starContainer.children('i').each(function (index) {
                    if (index < value) {
                        $(this).removeClass('fa-star-o').addClass('fa-star');
                    } else {
                        $(this).removeClass('fa-star').addClass('fa-star-o');
                    }
                });
            }
            updateStars(hiddenInput.val());
            $("#reviewForm").on("submit", function (e) {
                e.preventDefault();

                var stars = $("#Stars").val();
                var title = $("#Title").val();
                var description = $("#Description").val();
                var establishmentId = $("#EstablishmentId").val();
                if (!stars || !title || !description) {
                    alert("Please fill in all fields.");
                    return;
                }
                $.ajax({
                    url: "/Establishment/AddReview/",
                    type: "POST",
                    data: {
                        Stars: stars,
                        Title: title,
                        Description: description,
                        EstablishmentId: establishmentId
                    },
                    success: function (response) {
                        if (response.success) {
                            addReviewToUI(response.review);
                            $("#reviewModal").modal('hide');
                            $("#reviewForm")[0].reset();
                        } else if (response.hasReview) {
                            $("#confirmDeleteModal").modal('show');
                            $("#deleteAndCreateReview").off("click").on("click", function () {
                                $.ajax({
                                    url: `/Establishment/DeleteReview/${response.reviewId}`,
                                    type: "POST",
                                    success: function () {
                                        $.ajax({
                                            url: "/Establishment/AddReview/",
                                            type: "POST",
                                            data: {
                                                Stars: stars,
                                                Title: title,
                                                Description: description,
                                                EstablishmentId: establishmentId
                                            },
                                            success: function (response) {
                                                if (response.success) {
                                                    addReviewToUI(response.review);
                                                    $("#confirmDeleteModal").modal('hide');
                                                    $("#reviewModal").modal('hide');
                                                    $("#reviewForm")[0].reset();
                                                }
                                            }
                                        });
                                    }
                                });
                            });
                        } else {
                            alert("Error submitting review!");
                        }
                    },
                    error: function (xhr, status, error) {
                        var errorMessage = "Error submitting review!";
                        if (xhr.responseJSON && xhr.responseJSON.errors) {
                            errorMessage = xhr.responseJSON.errors.join(", ");
                        }
                        alert(errorMessage);
                    }
                });
            });
            
            function addReviewToUI(review) {
                var starsHtml = "";
                for (let i = 1; i <= 5; i++) {
                    starsHtml += i <= review.stars
                        ? `<i class="fa fa-star text-black"></i>`
                        : `<i class="fa fa-star-o text-black"></i>`;
                }

                var reviewHtml = `
            <div class="card mb-3 shadow-sm">
                <div class="card-body">
                    <h5 class="card-title fw-bold">${review.title}</h5>
                    <p class="card-text">${review.description}</p>
                    <p class="card-text text-muted">Rating: ${starsHtml} (${review.stars})</p>
                    <p class="card-text text-muted">
                        By: ${review.userName} | Date: ${review.createdAt}
                    </p>
                </div>
            </div>
        `;
                $(".reviews").append(reviewHtml);
            }

            function updateGallery(){
                $.ajax({
                    url: '@Url.Action("GetGalleryImages")',
                    data: {
                        id: @Model.Id
                    },
                    success: function (response){
                        $('.carousel-inner').html(response);
                    }
                });
            };

            $('#uploadForm').submit(function (e) {
                e.preventDefault();

                let formData = new FormData(this);

                $.ajax({
                    url: '@Url.Action("UploadGalleryImage")',
                    type: 'POST',
                    data: formData,
                    contentType: false,
                    processData: false,
                    success: function () {
                        $('#uploadForm')[0].reset();
                        $.ajax({
                            url: '@Url.Action("Details")',
                            data: {
                                id: @Model.Id
                            },
                            success: function (response){
                                $('.container').html(response);
                                updateGallery();
                            }
                        })
                    }
                });
            });
            
            function updateRating() {
                $.ajax({
                    url: '@Url.Action("GetRating")',
                    type: 'GET',
                    data: {
                        id: @Model.Id
                    },
                    success: function (response) {
                        $('.rating').html(response);
                    }
                });
            }

            updateGallery();
            updateRating();

            $('.submit-review').click(function () {
                updateRating();
            });
        });
    </script>
    <script src="https://kit.fontawesome.com/af54fdaf3a.js" crossorigin="anonymous"></script>
}